{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\User\\\\elecsisReact\\\\src\\\\views\\\\base\\\\tables\\\\Tables.js\";\n\nimport React from 'react';\nimport { CBadge, CCard, CCardBody, CCardHeader, CCol, CDataTable, CRow } from '@coreui/react';\nimport { DocsLink } from 'src/reusable';\nimport usersData from '../../users/UsersData';\n\nvar getBadge = function getBadge(status) {\n  switch (status) {\n    case 'Active':\n      return 'success';\n\n    case 'Inactive':\n      return 'secondary';\n\n    case 'Pending':\n      return 'warning';\n\n    case 'Banned':\n      return 'danger';\n\n    default:\n      return 'primary';\n  }\n};\n\nvar fields = ['name', 'registered', 'role', 'status'];\n\nvar Tables = function Tables() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    xs: \"12\",\n    lg: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCardHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Simple Table\", /*#__PURE__*/React.createElement(DocsLink, {\n    name: \"CModal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(CCardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CDataTable, {\n    items: usersData,\n    fields: fields,\n    itemsPerPage: 5,\n    pagination: true,\n    scopedSlots: {\n      'status': function status(item) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(CBadge, {\n          color: getBadge(item.status),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 23\n          }\n        }, item.status));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(CCol, {\n    xs: \"12\",\n    lg: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCardHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Striped Table\"), /*#__PURE__*/React.createElement(CCardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CDataTable, {\n    items: usersData,\n    fields: fields,\n    striped: true,\n    itemsPerPage: 5,\n    pagination: true,\n    scopedSlots: {\n      'status': function status(item) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(CBadge, {\n          color: getBadge(item.status),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 23\n          }\n        }, item.status));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }))))), /*#__PURE__*/React.createElement(CRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    xs: \"12\",\n    lg: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCardHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Condensed Table\"), /*#__PURE__*/React.createElement(CCardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CDataTable, {\n    items: usersData,\n    fields: fields,\n    size: \"sm\",\n    itemsPerPage: 5,\n    pagination: true,\n    scopedSlots: {\n      'status': function status(item) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(CBadge, {\n          color: getBadge(item.status),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 23\n          }\n        }, item.status));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(CCol, {\n    xs: \"12\",\n    lg: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCardHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, \"Bordered Table\"), /*#__PURE__*/React.createElement(CCardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CDataTable, {\n    items: usersData,\n    fields: fields,\n    bordered: true,\n    itemsPerPage: 5,\n    pagination: true,\n    scopedSlots: {\n      'status': function status(item) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(CBadge, {\n          color: getBadge(item.status),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 23\n          }\n        }, item.status));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }))))), /*#__PURE__*/React.createElement(CRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCardHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, \"Combined All Table\"), /*#__PURE__*/React.createElement(CCardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CDataTable, {\n    items: usersData,\n    fields: fields,\n    hover: true,\n    striped: true,\n    bordered: true,\n    size: \"sm\",\n    itemsPerPage: 10,\n    pagination: true,\n    scopedSlots: {\n      'status': function status(item) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(CBadge, {\n          color: getBadge(item.status),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 23\n          }\n        }, item.status));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }))))), /*#__PURE__*/React.createElement(CRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCardHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, \"Combined All dark Table\"), /*#__PURE__*/React.createElement(CCardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CDataTable, {\n    items: usersData,\n    fields: fields,\n    dark: true,\n    hover: true,\n    striped: true,\n    bordered: true,\n    size: \"sm\",\n    itemsPerPage: 10,\n    pagination: true,\n    scopedSlots: {\n      'status': function status(item) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(CBadge, {\n          color: getBadge(item.status),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 23\n          }\n        }, item.status));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }))))));\n};\n\nexport default Tables;","map":{"version":3,"sources":["C:/Users/User/elecsisReact/src/views/base/tables/Tables.js"],"names":["React","CBadge","CCard","CCardBody","CCardHeader","CCol","CDataTable","CRow","DocsLink","usersData","getBadge","status","fields","Tables","item"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {\r\n  CBadge,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow\r\n} from '@coreui/react'\r\nimport { DocsLink } from 'src/reusable'\r\n\r\nimport usersData from '../../users/UsersData'\r\n\r\nconst getBadge = status => {\r\n  switch (status) {\r\n    case 'Active': return 'success'\r\n    case 'Inactive': return 'secondary'\r\n    case 'Pending': return 'warning'\r\n    case 'Banned': return 'danger'\r\n    default: return 'primary'\r\n  }\r\n}\r\nconst fields = ['name','registered', 'role', 'status']\r\n\r\nconst Tables = () => {\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <CCol xs=\"12\" lg=\"6\">\r\n          <CCard>\r\n            <CCardHeader>\r\n              Simple Table\r\n              <DocsLink name=\"CModal\"/>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n            <CDataTable\r\n              items={usersData}\r\n              fields={fields}\r\n              itemsPerPage={5}\r\n              pagination\r\n              scopedSlots = {{\r\n                'status':\r\n                  (item)=>(\r\n                    <td>\r\n                      <CBadge color={getBadge(item.status)}>\r\n                        {item.status}\r\n                      </CBadge>\r\n                    </td>\r\n                  )\r\n\r\n              }}\r\n            />\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n\r\n        <CCol xs=\"12\" lg=\"6\">\r\n          <CCard>\r\n            <CCardHeader>\r\n              Striped Table\r\n            </CCardHeader>\r\n            <CCardBody>\r\n            <CDataTable\r\n              items={usersData}\r\n              fields={fields}\r\n              striped\r\n              itemsPerPage={5}\r\n              pagination\r\n              scopedSlots = {{\r\n                'status':\r\n                  (item)=>(\r\n                    <td>\r\n                      <CBadge color={getBadge(item.status)}>\r\n                        {item.status}\r\n                      </CBadge>\r\n                    </td>\r\n                  )\r\n\r\n              }}\r\n            />\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CRow>\r\n\r\n        <CCol xs=\"12\" lg=\"6\">\r\n          <CCard>\r\n            <CCardHeader>\r\n              Condensed Table\r\n            </CCardHeader>\r\n            <CCardBody>\r\n            <CDataTable\r\n              items={usersData}\r\n              fields={fields}\r\n              size=\"sm\"\r\n              itemsPerPage={5}\r\n              pagination\r\n              scopedSlots = {{\r\n                'status':\r\n                  (item)=>(\r\n                    <td>\r\n                      <CBadge color={getBadge(item.status)}>\r\n                        {item.status}\r\n                      </CBadge>\r\n                    </td>\r\n                  )\r\n\r\n              }}\r\n            />\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n\r\n        <CCol xs=\"12\" lg=\"6\">\r\n          <CCard>\r\n            <CCardHeader>\r\n              Bordered Table\r\n            </CCardHeader>\r\n            <CCardBody>\r\n            <CDataTable\r\n              items={usersData}\r\n              fields={fields}\r\n              bordered\r\n              itemsPerPage={5}\r\n              pagination\r\n              scopedSlots = {{\r\n                'status':\r\n                  (item)=>(\r\n                    <td>\r\n                      <CBadge color={getBadge(item.status)}>\r\n                        {item.status}\r\n                      </CBadge>\r\n                    </td>\r\n                  )\r\n\r\n              }}\r\n            />\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n\r\n      </CRow>\r\n\r\n      <CRow>\r\n        <CCol>\r\n          <CCard>\r\n            <CCardHeader>\r\n              Combined All Table\r\n            </CCardHeader>\r\n            <CCardBody>\r\n            <CDataTable\r\n              items={usersData}\r\n              fields={fields}\r\n              hover\r\n              striped\r\n              bordered\r\n              size=\"sm\"\r\n              itemsPerPage={10}\r\n              pagination\r\n              scopedSlots = {{\r\n                'status':\r\n                  (item)=>(\r\n                    <td>\r\n                      <CBadge color={getBadge(item.status)}>\r\n                        {item.status}\r\n                      </CBadge>\r\n                    </td>\r\n                  )\r\n              }}\r\n            />\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n        <CRow>\r\n        <CCol>\r\n          <CCard>\r\n            <CCardHeader>\r\n              Combined All dark Table\r\n            </CCardHeader>\r\n            <CCardBody>\r\n            <CDataTable\r\n              items={usersData}\r\n              fields={fields}\r\n              dark\r\n              hover\r\n              striped\r\n              bordered\r\n              size=\"sm\"\r\n              itemsPerPage={10}\r\n              pagination\r\n              scopedSlots = {{\r\n                'status':\r\n                  (item)=>(\r\n                    <td>\r\n                      <CBadge color={getBadge(item.status)}>\r\n                        {item.status}\r\n                      </CBadge>\r\n                    </td>\r\n                  )\r\n              }}\r\n            />\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tables\r\n"]},"metadata":{},"sourceType":"module"}